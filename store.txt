
import com.albertsons.cartservice.resources.constants.CartConstants;
import lombok.extern.slf4j.Slf4j;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Component;
import org.springframework.web.client.RestTemplate;

@Slf4j
@Component
public class StoreGateway implements IStoreGateway {

    @Value("${store.uri}")
    private String storeUri;

    @Autowired
    private RestTemplate restTemplate;

    @Override
    public boolean getStoreHours(String storeId) {

        boolean sngStoreHours = true;
        try {
            HttpHeaders headers = new HttpHeaders();
            headers.set(CartConstants.SUBSCRIPTION_KEY, CartConstants.RETAIL_OPERATIONS_SUBSCRIPTION_KEY);
            HttpEntity<?> entity = new HttpEntity<>(headers);
            String url = storeUri + Integer.parseInt(storeId, 10);
            ResponseEntity<String> response = restTemplate.exchange(url, HttpMethod.GET, entity, String.class);
            if (response.getBody() != null) {
                String storeResponsebBody = response.getBody();
                JSONParser parser = new JSONParser();
                JSONObject jobj = (JSONObject) parser.parse(storeResponsebBody);
                JSONObject dataObj = (JSONObject) parser.parse(jobj.get(CartConstants.DATA).toString());
                if (dataObj != null && dataObj.get(CartConstants.SNG_STORE_HOURS) != null) {
                    return (boolean) dataObj.get(CartConstants.SNG_STORE_HOURS);
                }
            }
        } catch (NumberFormatException | ParseException e) {
            log.debug("Exception occured - " + e.getStackTrace());
            return sngStoreHours;
        }
        return sngStoreHours;
    }
}